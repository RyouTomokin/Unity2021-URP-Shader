#pragma kernel CSMain
#pragma kernel CSMain2
#define GROUP_SIZE 128

RWStructuredBuffer<float> cubes;
uint cubeCount;
uint bitonicK,bitonicJ;

[numthreads(GROUP_SIZE, 1, 1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    
    uint idx = id.x;

    //GPU批量处理，但会因为并行导致数据不一定能统一同步，线程越多越容易出问题，
    for(uint k = 2; k <= cubeCount; k *= 2)
    {
        for (uint j = k / 2; j > 0; j /= 2)
        {
            uint l = idx ^ j;
            if(l > idx)
            {
                if(((idx & k) == 0 && cubes[idx] > cubes[l])
                || ((idx & k) != 0 && cubes[idx] < cubes[l]))
                {
                    float temp = cubes[idx];
                    cubes[idx] = cubes[l];
                    cubes[l] = temp;
                }
            }
            AllMemoryBarrier();
        }
    }
}

[numthreads(GROUP_SIZE, 1, 1)]
void CSMain2 (uint3 id : SV_DispatchThreadID)
{    
    uint idx = id.x;
    uint l = idx ^ bitonicJ;
    if(l > idx)
    {
        if(((idx & bitonicK) == 0 && cubes[idx] > cubes[l])
        || ((idx & bitonicK) != 0 && cubes[idx] < cubes[l]))
        {
            float temp = cubes[idx];
            cubes[idx] = cubes[l];
            cubes[l] = temp;
        }
    }
}